import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'android'

/**
 * 参考http://www.atatech.org/articles/19707
 * 对gradle和工具版本配置
 */
buildscript {
    repositories {
        mavenLocal()
        maven { url "http://mvnrepo.taobao.ali.com/mvn/releases" }
        maven { url "http://mvnrepo.taobao.ali.com/mvn/snapshots" }

        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:' + System.properties['androidGradlePluginVersion']
    }
}

task hello << {
    println 'Hello world!'
}


repositories {
    mavenLocal()
    maven { url "http://mvnrepo.taobao.ali.com/mvn/releases" }
    maven { url "http://mvnrepo.taobao.ali.com/mvn/snapshots" }

    mavenCentral()
}

android {
    compileSdkVersion 14
//    buildToolsVersion "19.1.0"
    buildToolsVersion System.properties['buildToolsVersion']
    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }


}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}


ext {
    if (project.hasProperty('profile')) {
        profile = project['profile']

    } else {
        profile = "production"
    }
}

def loadGroovy() {
    def configFile = file('config.groovy')
    new ConfigSlurper(profile).parse(configFile.toURL()).toProperties()
}


//android.applicationVariants.all { variant ->
//    variant.mergeResources.doLast {
//        copy {
//            from("${projectDir}/src/main/res") {
//                include "*.xml"
//            }
//            println "${variant.dirName}"
//            into("${buildDir}/res/${variant.dirName}")
//
//            filter(ReplaceTokens, tokens: loadGroovy())
//        }
//    }
//}
